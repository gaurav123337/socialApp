[{"C:\\Users\\Gaurav\\Desktop\\Demo\\SocialApp\\merng\\socialApp\\client\\src\\components\\PostForm.js":"1","C:\\Users\\Gaurav\\Desktop\\Demo\\SocialApp\\merng\\socialApp\\client\\src\\ApolloProvider.js":"2","C:\\Users\\Gaurav\\Desktop\\Demo\\SocialApp\\merng\\socialApp\\client\\src\\index.js":"3","C:\\Users\\Gaurav\\Desktop\\Demo\\SocialApp\\merng\\socialApp\\client\\src\\pages\\Register.js":"4","C:\\Users\\Gaurav\\Desktop\\Demo\\SocialApp\\merng\\socialApp\\client\\src\\context\\auth.js":"5","C:\\Users\\Gaurav\\Desktop\\Demo\\SocialApp\\merng\\socialApp\\client\\src\\components\\PostCard.js":"6","C:\\Users\\Gaurav\\Desktop\\Demo\\SocialApp\\merng\\socialApp\\client\\src\\App.js":"7","C:\\Users\\Gaurav\\Desktop\\Demo\\SocialApp\\merng\\socialApp\\client\\src\\pages\\Home.js":"8","C:\\Users\\Gaurav\\Desktop\\Demo\\SocialApp\\merng\\socialApp\\client\\src\\components\\MenuBar.js":"9","C:\\Users\\Gaurav\\Desktop\\Demo\\SocialApp\\merng\\socialApp\\client\\src\\util\\hooks.js":"10"},{"size":1409,"mtime":1615656393690,"results":"11","hashOfConfig":"12"},{"size":772,"mtime":1615651253344,"results":"13","hashOfConfig":"12"},{"size":436,"mtime":1612097034685,"results":"14","hashOfConfig":"12"},{"size":2856,"mtime":1615119132726,"results":"15","hashOfConfig":"12"},{"size":1307,"mtime":1615654806580,"results":"16","hashOfConfig":"12"},{"size":1452,"mtime":1613830060632,"results":"17","hashOfConfig":"12"},{"size":801,"mtime":1615643054999,"results":"18","hashOfConfig":"12"},{"size":1658,"mtime":1615658105799,"results":"19","hashOfConfig":"12"},{"size":1404,"mtime":1615120090873,"results":"20","hashOfConfig":"12"},{"size":404,"mtime":1615056763829,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1vahipz",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Gaurav\\Desktop\\Demo\\SocialApp\\merng\\socialApp\\client\\src\\components\\PostForm.js",["45","46"],"C:\\Users\\Gaurav\\Desktop\\Demo\\SocialApp\\merng\\socialApp\\client\\src\\ApolloProvider.js",[],"C:\\Users\\Gaurav\\Desktop\\Demo\\SocialApp\\merng\\socialApp\\client\\src\\index.js",[],["47","48"],"C:\\Users\\Gaurav\\Desktop\\Demo\\SocialApp\\merng\\socialApp\\client\\src\\pages\\Register.js",["49"],"import React, { useState, useContext } from 'react';\r\nimport { Button, Form } from 'semantic-ui-react';\r\nimport {useMutation} from '@apollo/react-hooks';\r\nimport gql from 'graphql-tag';\r\nimport PropTypes from 'prop-types';\r\nimport {AuthContext} from '../context/auth';\r\nimport {useForm } from '../util/hooks';\r\n\r\nconst Register = (props) => {\r\n  const context = useContext(AuthContext);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const {onChange, onSubmit, values} = useForm(registerUser, {\r\n    username:'',\r\n    email:'',\r\n    password:'',\r\n    confirmPassword:''}\r\n  )\r\n\r\n  const [addUser, {loading} ] = useMutation(REGISTER_USER, {\r\n    update(_, {data: {register: userData}}){\r\n      context.login(userData);\r\n      props.history.push('/');\r\n    },\r\n    onError(err){\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    variables: values\r\n  })\r\n\r\n  function registerUser(){\r\n    addUser();\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <Form onSubmit={onSubmit} noValidate className={loading && 'loading'}>\r\n      <h1>Register</h1>\r\n      <Form.Input label='Username' placeholder='Username...' name='username' value={values.username}\r\n      type=\"text\"\r\n      error={errors.username ? true : false}\r\n      onChange={onChange}/>\r\n      <Form.Input label='Email' placeholder='Email...' name='email' value={values.email}\r\n      type=\"email\"\r\n      error={errors.email ? true : false}\r\n      onChange={onChange}/>\r\n      <Form.Input label='Password' placeholder='Password...' name='password' value={values.password}\r\n      type=\"password\"\r\n      error={errors.password ? true : false}\r\n      onChange={onChange}/>\r\n      <Form.Input label='Confirm Password' placeholder='Confirm Password...' name='confirmPassword' value={values.confirmPassword}\r\n      type=\"password\"\r\n      error={errors.confirmPassword ? true : false}\r\n      onChange={onChange}/>\r\n      <Button type=\"submit\" primary>\r\n        Register\r\n      </Button>\r\n      </Form>\r\n      {\r\n        Object.keys(errors).length > 0 && (\r\n          <div className=\"ui error message\">\r\n            <ul className=\"list\">\r\n              {Object.values(errors).map((val) => {\r\n                return (<li key={val}>\r\n                  {val}\r\n                </li>)\r\n              })}\r\n            </ul>\r\n          </div>\r\n        )\r\n      }\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nRegister.propTypes = {};\r\n\r\nconst REGISTER_USER = gql`\r\n  mutation register(\r\n    $username: String!\r\n    $email: String!\r\n    $password: String!\r\n    $confirmPassword: String!\r\n  ) {\r\n    register(\r\n      registerInput: {\r\n        username: $username\r\n        email: $email\r\n        password: $password\r\n        confirmPassword: $confirmPassword\r\n      }\r\n    ){\r\n      id\r\n      username\r\n      email\r\n      createdAt\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Register;\r\n","C:\\Users\\Gaurav\\Desktop\\Demo\\SocialApp\\merng\\socialApp\\client\\src\\context\\auth.js",[],"C:\\Users\\Gaurav\\Desktop\\Demo\\SocialApp\\merng\\socialApp\\client\\src\\components\\PostCard.js",["50"],"C:\\Users\\Gaurav\\Desktop\\Demo\\SocialApp\\merng\\socialApp\\client\\src\\App.js",[],"C:\\Users\\Gaurav\\Desktop\\Demo\\SocialApp\\merng\\socialApp\\client\\src\\pages\\Home.js",["51"],"import React, {useContext } from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport gql from 'graphql-tag';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Grid } from 'semantic-ui-react';\r\nimport { AuthContext } from '../context/auth';\r\nimport PostCard from '../components/PostCard';\r\nimport PostForm from '../components/PostForm';\r\n// import { FETCH_POSTS_QUERY } from '../util/graphql';\r\n\r\nconst Home = () => {\r\n  const {user} = useContext(AuthContext);\r\n\r\n  const { loading, data  } = useQuery(FETCH_POSTS_QUERY);\r\n  let posts;\r\n  if(!loading) {\r\n    const { getPosts }  = data;\r\n    posts = getPosts;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Grid columns={3} fluid=\"true\">\r\n      <Grid.Row className=\"page-title\">\r\n          <h1>Recent Posts</h1>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          { user && (\r\n            <Grid.Column>\r\n              <PostForm />\r\n            </Grid.Column>\r\n          )\r\n\r\n          }\r\n          {loading ? (\r\n            <h1>Loading ...</h1>\r\n          ) : (\r\n              posts && posts.map(post => {\r\n                return (\r\n                  <Grid.Column key={post.id}>\r\n                    <PostCard post={post}/>\r\n                  </Grid.Column>\r\n                )\r\n              })\r\n          )}\r\n        </Grid.Row>\r\n    </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst FETCH_POSTS_QUERY = gql`\r\n  {\r\n    getPosts{\r\n      id\r\n      body\r\n      createdAt\r\n      username\r\n      likeCount\r\n      likes{\r\n        username\r\n      }\r\n      commentCount\r\n      comments{\r\n        id\r\n        username\r\n        createdAt\r\n        body\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nHome.propTypes = {};\r\n\r\nexport default Home;\r\n","C:\\Users\\Gaurav\\Desktop\\Demo\\SocialApp\\merng\\socialApp\\client\\src\\components\\MenuBar.js",[],"C:\\Users\\Gaurav\\Desktop\\Demo\\SocialApp\\merng\\socialApp\\client\\src\\util\\hooks.js",[],{"ruleId":"52","severity":1,"message":"53","line":8,"column":8,"nodeType":"54","messageId":"55","endLine":8,"endColumn":17},{"ruleId":"52","severity":1,"message":"56","line":15,"column":23,"nodeType":"54","messageId":"55","endLine":15,"endColumn":28},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"52","severity":1,"message":"53","line":5,"column":8,"nodeType":"54","messageId":"55","endLine":5,"endColumn":17},{"ruleId":"52","severity":1,"message":"61","line":4,"column":8,"nodeType":"54","messageId":"55","endLine":4,"endColumn":14},{"ruleId":"52","severity":1,"message":"53","line":4,"column":8,"nodeType":"54","messageId":"55","endLine":4,"endColumn":17},"no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","no-native-reassign",["62"],"no-negated-in-lhs",["63"],"'moment' is defined but never used.","no-global-assign","no-unsafe-negation"]